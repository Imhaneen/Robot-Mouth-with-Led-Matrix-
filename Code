#include <LedControl.h>

int DIN = 12;
int CLK = 10;
int CS = 11;

int numM = 4; // Number of matrices

LedControl lc = LedControl(DIN,CLK,CS,numM);

byte Robot_Mouth [][32] = {
  
   {
    B00000000, B00000000, B00000000, B00000000,
    B01100000, B00110000, B00011000, B00001100,
    B00001110, B00000110, B00000110, B00000110,
    B00000110, B00000110, B00000110, B00001100,
    B00001100, B00011000, B00110000, B01100000,
    B00000000, B00000000, B00000000, B00000000,
    B00000000, B00000000, B00000000, B00000000,
    B00000000, B00000000, B00000000, B00000000
  },
  {
    B00000000, B00000000, B00000000, B00000000,
    B01100000, B00110000, B00011000, B00001100,
    B00001110, B00000110, B00000110, B00000110,
    B00000110, B00000110, B00001110, B00001100,
    B00011000, B00110000, B01100000, B00000000,
    B00000000, B00000000, B00000000, B00000000,
    B00000000, B00000000, B00000000, B00000000,
    B00000000, B00000000, B00000000, B00000000
  },
};

int num_frames = sizeof(Robot_Mouth) / sizeof(Robot_Mouth[0]);

void display_frame(byte frame[]) {
  for (int M = 0; M < numM; M++) {
    for (int col=0; col < 32; col++) {
      lc.setColumn(M, col,frame[col + M * 8]);
    }
  } 
}


void setup() {
lc.shutdown(0,false);
lc.setIntensity(0,8);
lc.clearDisplay(0);
}

void loop() {
  
 for (int frame_index = 0; frame_index < num_frames; frame_index++) {
    display_frame(Robot_Mouth[frame_index]);
    delay(100); 
  }

}
